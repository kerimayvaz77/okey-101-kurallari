// Generated by view binder compiler. Do not edit!
package com.example.okey101rules.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.okey101rules.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogInfoDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View backgroundOverlay;

  @NonNull
  public final MaterialButton buttonExit;

  @NonNull
  public final MaterialCardView dialogCard;

  @NonNull
  public final CardView iconContainer;

  @NonNull
  public final TextView textViewDetailDescription;

  @NonNull
  public final TextView textViewDetailEmoji;

  @NonNull
  public final TextView textViewDetailTitle;

  private DialogInfoDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull View backgroundOverlay, @NonNull MaterialButton buttonExit,
      @NonNull MaterialCardView dialogCard, @NonNull CardView iconContainer,
      @NonNull TextView textViewDetailDescription, @NonNull TextView textViewDetailEmoji,
      @NonNull TextView textViewDetailTitle) {
    this.rootView = rootView;
    this.backgroundOverlay = backgroundOverlay;
    this.buttonExit = buttonExit;
    this.dialogCard = dialogCard;
    this.iconContainer = iconContainer;
    this.textViewDetailDescription = textViewDetailDescription;
    this.textViewDetailEmoji = textViewDetailEmoji;
    this.textViewDetailTitle = textViewDetailTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogInfoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogInfoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_info_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogInfoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backgroundOverlay;
      View backgroundOverlay = ViewBindings.findChildViewById(rootView, id);
      if (backgroundOverlay == null) {
        break missingId;
      }

      id = R.id.buttonExit;
      MaterialButton buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.dialogCard;
      MaterialCardView dialogCard = ViewBindings.findChildViewById(rootView, id);
      if (dialogCard == null) {
        break missingId;
      }

      id = R.id.iconContainer;
      CardView iconContainer = ViewBindings.findChildViewById(rootView, id);
      if (iconContainer == null) {
        break missingId;
      }

      id = R.id.textViewDetailDescription;
      TextView textViewDetailDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDetailDescription == null) {
        break missingId;
      }

      id = R.id.textViewDetailEmoji;
      TextView textViewDetailEmoji = ViewBindings.findChildViewById(rootView, id);
      if (textViewDetailEmoji == null) {
        break missingId;
      }

      id = R.id.textViewDetailTitle;
      TextView textViewDetailTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewDetailTitle == null) {
        break missingId;
      }

      return new DialogInfoDetailBinding((ConstraintLayout) rootView, backgroundOverlay, buttonExit,
          dialogCard, iconContainer, textViewDetailDescription, textViewDetailEmoji,
          textViewDetailTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
